{"version":3,"sources":["../src/envCheck.js"],"names":["envCheck","check","requiredEnv","unsetEnv","filter","env","process","length","Error","join","module","exports"],"mappings":";;AAAA,MAAMA,QAAQ,GAAIC,KAAD,IAAW;AAC1B;AACA,MAAIC,WAAW,GAAG,CAChB,YADgB,EAEhB,SAFgB,EAGhB,aAHgB,EAIhB,iBAJgB,EAKhB,iBALgB,EAMhB,YANgB,EAOhB,YAPgB,CAAlB;AASA,MAAIC,QAAQ,GAAGD,WAAW,CAACE,MAAZ,CACZC,GAAD,IAAS,EAAE,OAAOC,OAAO,CAACD,GAAR,CAAYA,GAAZ,CAAP,KAA4B,WAA9B,CADI,CAAf;;AAIA,MAAIF,QAAQ,CAACI,MAAT,GAAkB,CAAtB,EAAyB;AACvB,UAAM,IAAIC,KAAJ,CACJ,0CACEL,QAAQ,CAACM,IAAT,CAAc,IAAd,CADF,GAEE,GAHE,CAAN;AAKD;AACF,CAtBD;;AAuBAC,MAAM,CAACC,OAAP,GAAiBX,QAAjB","sourcesContent":["const envCheck = (check) => {\n  // Ensure required ENV vars are set\n  let requiredEnv = [\n    'SOCKET_URL',\n    'DEVICES',\n    'FIRESTATION',\n    'DEVICE_USERNAME',\n    'DEVICE_PASSWORD',\n    'SOCKET_KEY',\n    'SCREEN_KEY',\n  ];\n  let unsetEnv = requiredEnv.filter(\n    (env) => !(typeof process.env[env] !== 'undefined'),\n  );\n\n  if (unsetEnv.length > 0) {\n    throw new Error(\n      'Required ENV variables are not set: [' +\n        unsetEnv.join(', ') +\n        ']',\n    );\n  }\n};\nmodule.exports = envCheck;\n"],"file":"envCheck.js"}