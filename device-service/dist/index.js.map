{"version":3,"sources":["../src/index.js"],"names":["axios","require","config","socket","process","env","SOCKET_URL","on","console","log","emit","FIRESTATION","m","notifyDevices","JSON","parse","DEVICES","devices","options","headers","auth","username","DEVICE_USERNAME","password","DEVICE_PASSWORD","device","res","get","err","message","data"],"mappings":";;AAAA;;;;AACA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,G,CAEA;;;AACAD,OAAO,CAAC,YAAD,CAAP;;AAEA,MAAME,MAAM,GAAG,qBAAGC,OAAO,CAACC,GAAR,CAAYC,UAAf,CAAf,C,CACA;;AACAH,MAAM,CAACI,EAAP,CAAU,SAAV,EAAqB,MAAM;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAN,EAAAA,MAAM,CAACO,IAAP,CAAY,YAAZ,EAA0BN,OAAO,CAACC,GAAR,CAAYM,WAAtC;AACD,CAHD,E,CAKA;;AACAR,MAAM,CAACI,EAAP,CAAU,YAAV,EAAwB,MAAOK,CAAP,IAAa;AACnCJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACD,CAFD;AAIAT,MAAM,CAACI,EAAP,CAAU,UAAV,EAAsB,MAAOK,CAAP,IAAa;AACjCJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACA,QAAMC,aAAa,CAACC,IAAI,CAACC,KAAL,CAAWX,OAAO,CAACC,GAAR,CAAYW,OAAvB,CAAD,CAAnB;AAEAR,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,CALD,E,CAOA;;AACAN,MAAM,CAACI,EAAP,CAAU,YAAV,EAAwB,MAAM;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,CAFD,E,CAIA;;AACA,MAAMI,aAAa,GAAG,MAAOI,OAAP,IAAmB;AACvC,QAAMC,OAAO,GAAG;AACdC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KADK;AAIdC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAEjB,OAAO,CAACC,GAAR,CAAYiB,eADlB;AAEJC,MAAAA,QAAQ,EAAEnB,OAAO,CAACC,GAAR,CAAYmB;AAFlB;AAJQ,GAAhB;;AAUA,aAAW,MAAMC,MAAjB,IAA2BR,OAA3B,EAAoC;AAClC,QAAIS,GAAJ;;AACA,QAAI;AACFA,MAAAA,GAAG,GAAG,MAAM1B,KAAK,CAAC2B,GAAN,CACT,UAASF,MAAO,kBADP,EAEVP,OAFU,CAAZ;AAID,KALD,CAKE,OAAOU,GAAP,EAAY;AACZpB,MAAAA,OAAO,CAACC,GAAR,CAAa,UAASmB,GAAG,CAACC,OAAQ,EAAlC;AACD;;AACDrB,IAAAA,OAAO,CAACC,GAAR,CAAYiB,GAAG,CAACI,IAAhB;AACD;AACF,CAvBD","sourcesContent":["import io from 'socket.io-client';\nconst axios = require('axios');\nrequire('dotenv').config();\n\n// check env values\nrequire('./envCheck')();\n\nconst socket = io(process.env.SOCKET_URL);\n// join fs room on connection\nsocket.on('connect', () => {\n  console.log('connected to socket server');\n  socket.emit('joinFSRoom', process.env.FIRESTATION);\n});\n\n// register on welcome messaage\nsocket.on('welcomeMsg', async (m) => {\n  console.log(m);\n});\n\nsocket.on('newAlarm', async (m) => {\n  console.log(m);\n  await notifyDevices(JSON.parse(process.env.DEVICES));\n\n  console.log('Done with IoT Devices');\n});\n\n// function on missing connection\nsocket.on('disconnect', () => {\n  console.log('disconnected');\n});\n\n// Function to toggle all on prem IoT devices on incoming alarm\nconst notifyDevices = async (devices) => {\n  const options = {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    auth: {\n      username: process.env.DEVICE_USERNAME,\n      password: process.env.DEVICE_PASSWORD,\n    },\n  };\n\n  for await (const device of devices) {\n    let res;\n    try {\n      res = await axios.get(\n        `http://${device}/relay/0?turn=on`,\n        options,\n      );\n    } catch (err) {\n      console.log(`error: ${err.message}`);\n    }\n    console.log(res.data);\n  }\n};\n"],"file":"index.js"}